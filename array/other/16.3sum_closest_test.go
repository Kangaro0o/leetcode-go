package other

import (
	"testing"
)

func Test_threeSumClosest(t *testing.T) {
	type args struct {
		nums   []int
		target int
	}
	tests := []struct {
		name string
		args args
		want int
	}{
		{
			name: "case1",
			args: args{
				nums:   []int{-1, 2, 1, -4},
				target: 1,
			},
			want: 2,
		},
		{
			name: "case2",
			args: args{
				nums:   []int{0, 0, 0},
				target: 1,
			},
			want: 0,
		},
		{
			name: "case3",
			args: args{
				nums:   []int{1, 1, -1, -1, 3},
				target: 3,
			},
			want: 3,
		},
		{
			name: "case4",
			args: args{
				nums:   []int{-327, -446, -311, -322, -734, -143, 139, 53, -26, 340, 346, 118, 223, -350, 969, -936, 279, -344, -482, -535, -652, 619, 996, 815, -788, -99, -804, -380, -5, 643, -890, -684, -828, 736, 567, -798, 144, 96, 897, -483, -223, 896, -931, 986, -698, 888, 841, -986, -376, 964, 721, -285, 262, 436, 344, -556, -310, -679, -230, 543, 403, 338, -349, -448, -646, 80, -240, -597, 998, -113, -633, -685, -523, 108, -577, 690, -905, 315, -520, -185, 140, 467, -391, 502, -333, 334, -782, -474, -974, -222, -224, -894, -970, -449, 851, -943, -447, -558, -940, -271, 483, -790, -998, 814, -946, -843, -111, -103, -504, 689, -545, 634, -414, -280, -832, -540, -997, -906, -320, 633, 756, -274, 429, 246, -60, -755, 561, -778, 605, -913, 536, 270, 509, -493, -195, -629, -978, 27, -866, -62, -127, 591, 729, -714, -754, -907, 495, -803, 818, 11, -779, -768, 768, 826, -680, -794, 574, 333, 792, -284, -182, -911, 1, -683, -584, -326, -139, 185, 606, 178, -393, 848, 743, -186, -505, 889, 221, 324, 182, -82, 294, 955, 452, 484, 67, -83, -164, 677, 305, 901, -312, -104, -98, -717, 497, 674, -859, -507, 412, 88, 74, 168, 715, -211, 150, 388, 832, -339, -787, 957, -849, 944, 984, 431, -354, 995, 908, 157, -581, 33, -665, -13, -615, 973, -982, -395, 777, 837, -381, 29, 699, 432, -701, 322, 550, 291, 639, -468, 510, -292, 649, 341, 805, -700, -488, 707, -191, 430, 180, -569, 129, -512, 881, -299, -516, 332, 225, -923, -57, 983, 457, 932, -948, -134, -591, 685, -772, 927, -126, -166, 819, 879, -107, 784, 865, 967, -12, 887, 799, -886, 686, 954, -839, -725, -93, 121, 961, 972, 206, -122, -777, 170, 277, -532, -732, -229, -14, 760, -509, -543, 63, -669, -625, -278, -264, -518, -173, -848, 242, 232, -941, 970, 339, -673, 335, 666, 336, -868, -69, 547, 601, -626, 295, 435, 247, 599, 25, -999, -462, 838, -272, -583, 289, 963, -781, -404, 81, 438, -142, -281, -722, -624, -933, 440, -366, -651, -872, -72, -590, -560, -324, -75, -721, -330, 208, -672, 802, -317, 285, 836, 273, 271, -329, -814, -598, -257, 590, 272, 657, 468, 702, -154, 572, -187, 503, -851, -861, -269, 905, -748, -19, -119, -649, 136, 215, -774, 447, -925, -155, 165, 549, 94, 57, 23, 257, 725, -205, -220, -219, -117, 162, 907, -891, 390, 100, 43, 316, 299, -969, -530, 640, 856, 496, -733, 76, 824, 319, -691, 258, 505, 628, -238, -347, 263, 200, 822, 317, 236, 227, -962, 587, -420, -382, -549, -118, -687, 801, 301, 821, 931, -723, 220, -451, -86, 849, 531, -171, 621, -867, 933, -769, 899, -805, -892, 936, -742, 372, -421, 790, -128, 152, 742, -148, -221, 396, 519, 665, 537, 360, -863, -246, 911, 146, -470, -822, -484, 880, 19, 744, -860, 207, 202, 595, 563, -608, 310, 499, -78, -637, 186, -424, 831, -31, 823, -373, 382, 441, 377, 853, 739, 852, -671, -434, -882, 359, -681, -985, 459, -296, -287, 134, -551, -415, 70, -953, -879, -864, -291, -607, 280, 783, 946, -922, 55, 177, 423, 451, 116, -915, 395, 127, -895, -204, -342, 400, 175, -464, -972, -511, 153, -826, 201, 769, -41, -17, 479, -370, 885, 413, 42, -614, -156, 320, 102, 979, 195, 164, -253, -502, -573, -184, 692, -461, -547, -400, -212, 1000, 738, -797, -157, 711, -120, -412, 714, 810, 782, -579, -293, 490, -226, 734, 528, 92},
				target: -7489,
			},
			want: -2994,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := threeSumClosest(tt.args.nums, tt.args.target); got != tt.want {
				t.Errorf("threeSumClosest() = %v, want %v", got, tt.want)
			}
		})
	}
}
